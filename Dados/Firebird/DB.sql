/******************************************************************************/
/*           Generated by IBExpert 2025.2.27.1 06/03/2025 21:08:14            */
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES NONE;

CREATE DATABASE 'C:\Users\manoe\Desktop\DeliveryFarmacia\Dados\Firebird\DB.fdb'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET NONE COLLATION NONE;



/******************************************************************************/
/*                                 Generators                                 */
/******************************************************************************/

CREATE GENERATOR GEN_CLIENTES_ID;
SET GENERATOR GEN_CLIENTES_ID TO 4;

CREATE GENERATOR GEN_ENTREGADORES_ID;
SET GENERATOR GEN_ENTREGADORES_ID TO 4;

CREATE GENERATOR GEN_ENTREGAS_ID;
SET GENERATOR GEN_ENTREGAS_ID TO 2;

CREATE GENERATOR GEN_ITENSPEDIDO_ID;
SET GENERATOR GEN_ITENSPEDIDO_ID TO 20;

CREATE GENERATOR GEN_PEDIDOSENTREGAS_ID;
SET GENERATOR GEN_PEDIDOSENTREGAS_ID TO 12;

CREATE GENERATOR GEN_PEDIDOS_ID;
SET GENERATOR GEN_PEDIDOS_ID TO 12;

CREATE GENERATOR GEN_PRODUTOS_ID;
SET GENERATOR GEN_PRODUTOS_ID TO 15;



/******************************************************************************/
/*                                   Tables                                   */
/******************************************************************************/



CREATE TABLE CLIENTES (
    ID        INTEGER NOT NULL,
    NOME      VARCHAR(100) NOT NULL,
    ENDERECO  VARCHAR(255) NOT NULL,
    TELEFONE  VARCHAR(20) NOT NULL
);

CREATE TABLE ENTREGADORES (
    ID                INTEGER NOT NULL,
    NOME              VARCHAR(100) NOT NULL,
    VEICULO           VARCHAR(50) NOT NULL,
    CAPACIDADEMAXIMA  INTEGER DEFAULT 5 NOT NULL
);

CREATE TABLE ENTREGAS (
    ID             INTEGER NOT NULL,
    ENTREGADOR_ID  INTEGER NOT NULL,
    DATAENTREGA    TIMESTAMP,
    COMENTARIOS    VARCHAR(255),
    STATUS_ID      INTEGER
);

CREATE TABLE ITENSPEDIDO (
    ID           INTEGER NOT NULL,
    PEDIDO_ID    INTEGER NOT NULL,
    PRODUTO_ID   INTEGER NOT NULL,
    QUANTIDADE   INTEGER NOT NULL,
    OBSERVACOES  VARCHAR(255)
);

CREATE TABLE PEDIDOS (
    ID          INTEGER NOT NULL,
    CLIENTE_ID  INTEGER NOT NULL,
    DATAPEDIDO  TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    STATUS_ID   INTEGER
);

CREATE TABLE PEDIDOSENTREGAS (
    ID           INTEGER NOT NULL,
    PEDIDO_ID    INTEGER NOT NULL,
    ENTREGA_ID   INTEGER NOT NULL,
    DATAENTREGA  TIMESTAMP,
    STATUS_ID    INTEGER DEFAULT 5,
    COMENTARIOS  VARCHAR(255)
);

CREATE TABLE PRODUTOS (
    ID                      INTEGER NOT NULL,
    NOME                    VARCHAR(100) NOT NULL,
    CODIGO                  VARCHAR(20) NOT NULL,
    TIPO                    INTEGER,
    QUANTIDADE              INTEGER NOT NULL,
    DATAVALIDADE            DATE,
    CONDICOESARMAZENAMENTO  VARCHAR(255),
    VALOR                   NUMERIC(15,2)
);

CREATE TABLE STATUS (
    ID    INTEGER NOT NULL,
    TIPO  SMALLINT NOT NULL,
    NOME  VARCHAR(50) NOT NULL
);

CREATE TABLE TIPOPRODUTO (
    ID    INTEGER NOT NULL,
    NOME  VARCHAR(50) NOT NULL
);

INSERT INTO CLIENTES (ID, NOME, ENDERECO, TELEFONE) VALUES (1, 'João Silva', 'Rua das Flores, 42, Jardim Primavera, São Paulo, Brasil, CEP 12345-678', '(11) 98765-4321');
INSERT INTO CLIENTES (ID, NOME, ENDERECO, TELEFONE) VALUES (2, 'Maria Oliveira', 'Avenida Paulista, 1000, Bela Vista, São Paulo, Brasil, CEP 01310-100', '(11) 91234-5678');
INSERT INTO CLIENTES (ID, NOME, ENDERECO, TELEFONE) VALUES (4, 'Tadeu', 'Rua aurora, 22', '(84) 99999-9999');


COMMIT WORK;

INSERT INTO ENTREGADORES (ID, NOME, VEICULO, CAPACIDADEMAXIMA) VALUES (1, 'Carlos Souza', 'Moto', 3);
INSERT INTO ENTREGADORES (ID, NOME, VEICULO, CAPACIDADEMAXIMA) VALUES (2, 'Ana Paula', 'Moto', 5);


COMMIT WORK;

INSERT INTO STATUS (ID, TIPO, NOME) VALUES (1, 0, 'Em Processamento');
INSERT INTO STATUS (ID, TIPO, NOME) VALUES (2, 0, 'Cancelado');
INSERT INTO STATUS (ID, TIPO, NOME) VALUES (3, 0, 'Em Andamento');
INSERT INTO STATUS (ID, TIPO, NOME) VALUES (4, 0, 'Concluido');
INSERT INTO STATUS (ID, TIPO, NOME) VALUES (5, 1, 'Pendente');
INSERT INTO STATUS (ID, TIPO, NOME) VALUES (6, 1, 'Em Trânsito');
INSERT INTO STATUS (ID, TIPO, NOME) VALUES (7, 1, 'Entregue');
INSERT INTO STATUS (ID, TIPO, NOME) VALUES (8, 1, 'Cancelada');


COMMIT WORK;

INSERT INTO ENTREGAS (ID, ENTREGADOR_ID, DATAENTREGA, COMENTARIOS, STATUS_ID) VALUES (1, 1, NULL, 'Cliente satisfeito', 6);
INSERT INTO ENTREGAS (ID, ENTREGADOR_ID, DATAENTREGA, COMENTARIOS, STATUS_ID) VALUES (2, 2, NULL, 'Entrega prevista para 2023-10-04', 5);


COMMIT WORK;

INSERT INTO PEDIDOS (ID, CLIENTE_ID, DATAPEDIDO, STATUS_ID) VALUES (1, 1, '2023-10-01 10:00:00', 3);
INSERT INTO PEDIDOS (ID, CLIENTE_ID, DATAPEDIDO, STATUS_ID) VALUES (2, 2, '2023-10-02 14:30:00', 1);
INSERT INTO PEDIDOS (ID, CLIENTE_ID, DATAPEDIDO, STATUS_ID) VALUES (9, 2, '2025-03-05 13:47:09', 2);
INSERT INTO PEDIDOS (ID, CLIENTE_ID, DATAPEDIDO, STATUS_ID) VALUES (10, 1, '2025-03-05 21:50:26', 1);
INSERT INTO PEDIDOS (ID, CLIENTE_ID, DATAPEDIDO, STATUS_ID) VALUES (11, 4, '2025-03-06 14:32:26', 1);
INSERT INTO PEDIDOS (ID, CLIENTE_ID, DATAPEDIDO, STATUS_ID) VALUES (12, 4, '2025-03-06 14:33:15', 1);


COMMIT WORK;

INSERT INTO TIPOPRODUTO (ID, NOME) VALUES (1, 'Medicamento Comum');
INSERT INTO TIPOPRODUTO (ID, NOME) VALUES (2, 'Medicamento Controlado');
INSERT INTO TIPOPRODUTO (ID, NOME) VALUES (3, 'Medicamento Sensível');
INSERT INTO TIPOPRODUTO (ID, NOME) VALUES (4, 'Cosmético');
INSERT INTO TIPOPRODUTO (ID, NOME) VALUES (5, 'Produto Perecível');
INSERT INTO TIPOPRODUTO (ID, NOME) VALUES (6, 'Produto Não Perecível');


COMMIT WORK;

INSERT INTO PRODUTOS (ID, NOME, CODIGO, TIPO, QUANTIDADE, DATAVALIDADE, CONDICOESARMAZENAMENTO, VALOR) VALUES (3, 'Paracetamol', 'MED001', 1, 50, '2024-06-30', NULL, 8.8);
INSERT INTO PRODUTOS (ID, NOME, CODIGO, TIPO, QUANTIDADE, DATAVALIDADE, CONDICOESARMAZENAMENTO, VALOR) VALUES (4, 'Dipirona', 'MED002', 1, 28, '2023-12-15', NULL, 9.5);
INSERT INTO PRODUTOS (ID, NOME, CODIGO, TIPO, QUANTIDADE, DATAVALIDADE, CONDICOESARMAZENAMENTO, VALOR) VALUES (5, 'Rivotril', 'MED003', 2, 8, '2023-09-20', NULL, 10);
INSERT INTO PRODUTOS (ID, NOME, CODIGO, TIPO, QUANTIDADE, DATAVALIDADE, CONDICOESARMAZENAMENTO, VALOR) VALUES (6, 'Ritalina', 'MED004', 2, 18, '2024-03-31', NULL, 60);
INSERT INTO PRODUTOS (ID, NOME, CODIGO, TIPO, QUANTIDADE, DATAVALIDADE, CONDICOESARMAZENAMENTO, VALOR) VALUES (7, 'Insulina', 'MED005', 3, 3, '2023-10-31', 'Refrigerado entre 2°C e 8°C', 800);
INSERT INTO PRODUTOS (ID, NOME, CODIGO, TIPO, QUANTIDADE, DATAVALIDADE, CONDICOESARMAZENAMENTO, VALOR) VALUES (8, 'Vacina da COVID-19', 'MED006', 3, 49, '2023-11-30', 'Congelado a -20°C', 200);
INSERT INTO PRODUTOS (ID, NOME, CODIGO, TIPO, QUANTIDADE, DATAVALIDADE, CONDICOESARMAZENAMENTO, VALOR) VALUES (9, 'Creme Hidratante', 'COS001', 4, 15, '2024-02-28', NULL, 50);
INSERT INTO PRODUTOS (ID, NOME, CODIGO, TIPO, QUANTIDADE, DATAVALIDADE, CONDICOESARMAZENAMENTO, VALOR) VALUES (10, 'Perfume Feminino', 'COS002', 4, 15, '2025-06-30', NULL, 50.9);
INSERT INTO PRODUTOS (ID, NOME, CODIGO, TIPO, QUANTIDADE, DATAVALIDADE, CONDICOESARMAZENAMENTO, VALOR) VALUES (11, 'Suplemento de Colágeno', 'PER001', 5, 28, '2023-08-31', NULL, 160);
INSERT INTO PRODUTOS (ID, NOME, CODIGO, TIPO, QUANTIDADE, DATAVALIDADE, CONDICOESARMAZENAMENTO, VALOR) VALUES (12, 'Leite Infantil', 'PER002', 5, 25, '2023-10-15', NULL, 30);
INSERT INTO PRODUTOS (ID, NOME, CODIGO, TIPO, QUANTIDADE, DATAVALIDADE, CONDICOESARMAZENAMENTO, VALOR) VALUES (13, 'Pasta de Dente', 'NPER001', 6, 50, NULL, NULL, 20);
INSERT INTO PRODUTOS (ID, NOME, CODIGO, TIPO, QUANTIDADE, DATAVALIDADE, CONDICOESARMAZENAMENTO, VALOR) VALUES (14, 'Shampoo', 'NPER002', 6, 38, NULL, NULL, 50);


COMMIT WORK;

INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (1, 1, 4, 1, 'Manter em temperatura ambiente');
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (2, 1, 5, 1, 'Manter refrigerado');
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (3, 2, 3, 1, 'Manter em local seguro');
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (4, 2, 7, 3, 'Embalagem frágil ..');
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (11, 9, 4, 3, 'teste');
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (12, 9, 6, 2, 'teste2');
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (13, 1, 9, 3, 'o');
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (14, 10, 11, 2, NULL);
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (15, 10, 7, 1, '...');
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (16, 11, 5, 2, 'te');
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (17, 11, 7, 1, 't');
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (18, 11, 8, 1, NULL);
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (19, 12, 9, 2, NULL);
INSERT INTO ITENSPEDIDO (ID, PEDIDO_ID, PRODUTO_ID, QUANTIDADE, OBSERVACOES) VALUES (20, 12, 14, 2, NULL);


COMMIT WORK;

INSERT INTO PEDIDOSENTREGAS (ID, PEDIDO_ID, ENTREGA_ID, DATAENTREGA, STATUS_ID, COMENTARIOS) VALUES (2, 2, 1, NULL, 6, NULL);
INSERT INTO PEDIDOSENTREGAS (ID, PEDIDO_ID, ENTREGA_ID, DATAENTREGA, STATUS_ID, COMENTARIOS) VALUES (6, 11, 1, '2025-03-06 21:07:38', 7, 'Tudo ok');
INSERT INTO PEDIDOSENTREGAS (ID, PEDIDO_ID, ENTREGA_ID, DATAENTREGA, STATUS_ID, COMENTARIOS) VALUES (12, 10, 2, NULL, 5, NULL);
INSERT INTO PEDIDOSENTREGAS (ID, PEDIDO_ID, ENTREGA_ID, DATAENTREGA, STATUS_ID, COMENTARIOS) VALUES (10, 1, 1, NULL, 6, 'ok');


COMMIT WORK;



/******************************************************************************/
/*                                Primary keys                                */
/******************************************************************************/

ALTER TABLE CLIENTES ADD PRIMARY KEY (ID);
ALTER TABLE ENTREGADORES ADD PRIMARY KEY (ID);
ALTER TABLE ENTREGAS ADD PRIMARY KEY (ID);
ALTER TABLE ITENSPEDIDO ADD PRIMARY KEY (ID);
ALTER TABLE PEDIDOS ADD PRIMARY KEY (ID);
ALTER TABLE PEDIDOSENTREGAS ADD PRIMARY KEY (ID);
ALTER TABLE PRODUTOS ADD PRIMARY KEY (ID);
ALTER TABLE STATUS ADD PRIMARY KEY (ID);
ALTER TABLE TIPOPRODUTO ADD PRIMARY KEY (ID);


/******************************************************************************/
/*                                Foreign keys                                */
/******************************************************************************/

ALTER TABLE ENTREGAS ADD CONSTRAINT FK_ENTREGAS_STATUS FOREIGN KEY (STATUS_ID) REFERENCES STATUS (ID);
ALTER TABLE ENTREGAS ADD FOREIGN KEY (ENTREGADOR_ID) REFERENCES ENTREGADORES (ID);
ALTER TABLE ITENSPEDIDO ADD FOREIGN KEY (PEDIDO_ID) REFERENCES PEDIDOS (ID);
ALTER TABLE ITENSPEDIDO ADD FOREIGN KEY (PRODUTO_ID) REFERENCES PRODUTOS (ID);
ALTER TABLE PEDIDOS ADD CONSTRAINT FK_PEDIDOS_STATUS FOREIGN KEY (STATUS_ID) REFERENCES STATUS (ID);
ALTER TABLE PEDIDOS ADD FOREIGN KEY (CLIENTE_ID) REFERENCES CLIENTES (ID);
ALTER TABLE PEDIDOSENTREGAS ADD CONSTRAINT FK_PEDIDOSENTREGAS_1 FOREIGN KEY (STATUS_ID) REFERENCES STATUS (ID);
ALTER TABLE PEDIDOSENTREGAS ADD FOREIGN KEY (PEDIDO_ID) REFERENCES PEDIDOS (ID);
ALTER TABLE PEDIDOSENTREGAS ADD FOREIGN KEY (ENTREGA_ID) REFERENCES ENTREGAS (ID);
ALTER TABLE PRODUTOS ADD CONSTRAINT FK_TIPO_PRODUTOS FOREIGN KEY (TIPO) REFERENCES TIPOPRODUTO (ID);


/******************************************************************************/
/*                                  Triggers                                  */
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/*                            Triggers for tables                             */
/******************************************************************************/



/* Trigger: ATUALIZARDATAENTREGA */
CREATE TRIGGER ATUALIZARDATAENTREGA FOR PEDIDOSENTREGAS
ACTIVE BEFORE UPDATE POSITION 0
AS
BEGIN
  -- Verifica se o Status_ID foi alterado para 7 (Entregue)
  IF (NEW.Status_ID = 7) THEN
  BEGIN
    -- Atualiza o campo DataEntrega com a data e hora atuais
    NEW.DataEntrega = CURRENT_TIMESTAMP;
  END
  ELSE
  BEGIN
    -- Define o campo DataEntrega como NULL para Status_ID diferente de 7
    NEW.DataEntrega = NULL;
  END
END
^

/* Trigger: ATUALIZARSTATUSPEDIDO */
CREATE TRIGGER ATUALIZARSTATUSPEDIDO FOR ENTREGAS
ACTIVE AFTER UPDATE POSITION 0
AS
BEGIN
  -- Verifica se o Status_ID da entrega foi alterado para 6 (Em Transito)
  IF (NEW.Status_ID = 6) THEN
  BEGIN
    -- Atualiza o Status_ID do pedido associado para 3 (Em Andamento)
    UPDATE Pedidos
    SET Status_ID = 3
    WHERE ID = NEW.ID;
  END

  IF (NEW.Status_ID = 7) THEN
  BEGIN
    -- Atualiza o Status_ID do pedido associado para 3 (Em Andamento)
    UPDATE Pedidos
    SET Status_ID = 4
    WHERE ID = NEW.ID;
  END
END
^

/* Trigger: BD_ITENSPEDIDO_QUANTIDADE */
CREATE TRIGGER BD_ITENSPEDIDO_QUANTIDADE FOR ITENSPEDIDO
ACTIVE BEFORE DELETE POSITION 0
AS
BEGIN
    -- Verifica se o Produto_ID existe na tabela Produtos
    IF (EXISTS(SELECT 1 FROM Produtos WHERE ID = OLD.Produto_ID)) THEN
    BEGIN
        -- Repoe a quantidade do produto relacionado
        UPDATE Produtos
        SET Quantidade = Quantidade + OLD.Quantidade
        WHERE ID = OLD.Produto_ID;
    END
END
^

/* Trigger: BI_CLIENTES_ID */
CREATE TRIGGER BI_CLIENTES_ID FOR CLIENTES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = NEXT VALUE FOR GEN_CLIENTES_ID;
END
^

/* Trigger: BI_ENTREGADORES_ID */
CREATE TRIGGER BI_ENTREGADORES_ID FOR ENTREGADORES
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = NEXT VALUE FOR GEN_ENTREGADORES_ID;
END
^

/* Trigger: BI_ENTREGAS_ID */
CREATE TRIGGER BI_ENTREGAS_ID FOR ENTREGAS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = NEXT VALUE FOR GEN_ENTREGAS_ID;
END
^

/* Trigger: BI_ITENSPEDIDO_ID */
CREATE TRIGGER BI_ITENSPEDIDO_ID FOR ITENSPEDIDO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = NEXT VALUE FOR GEN_ITENSPEDIDO_ID;
END
^

/* Trigger: BI_ITENSPEDIDO_QUANTIDADE */
CREATE TRIGGER BI_ITENSPEDIDO_QUANTIDADE FOR ITENSPEDIDO
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    -- Verifica se o Produto_ID existe na tabela Produtos
    IF (EXISTS(SELECT 1 FROM Produtos WHERE ID = NEW.Produto_ID)) THEN
    BEGIN
        -- Decrementa a quantidade do produto relacionado
        UPDATE Produtos
        SET Quantidade = Quantidade - NEW.Quantidade
        WHERE ID = NEW.Produto_ID;
    END
END
^

/* Trigger: BI_PEDIDOSENTREGAS_ID */
CREATE TRIGGER BI_PEDIDOSENTREGAS_ID FOR PEDIDOSENTREGAS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = NEXT VALUE FOR GEN_PEDIDOSENTREGAS_ID;
END
^

/* Trigger: BI_PEDIDOS_ID */
CREATE TRIGGER BI_PEDIDOS_ID FOR PEDIDOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = NEXT VALUE FOR GEN_PEDIDOS_ID;
END
^

/* Trigger: BI_PRODUTOS_ID */
CREATE TRIGGER BI_PRODUTOS_ID FOR PRODUTOS
ACTIVE BEFORE INSERT POSITION 0
AS
BEGIN
    IF (NEW.ID IS NULL) THEN
        NEW.ID = NEXT VALUE FOR GEN_PRODUTOS_ID;
END
^

/* Trigger: BU_ITENSPEDIDO_QUANTIDADE */
CREATE TRIGGER BU_ITENSPEDIDO_QUANTIDADE FOR ITENSPEDIDO
ACTIVE BEFORE UPDATE POSITION 0
AS
BEGIN
    -- Verifica se o Produto_ID existe na tabela Produtos
    IF (EXISTS(SELECT 1 FROM Produtos WHERE ID = NEW.Produto_ID)) THEN
    BEGIN
        -- Repoe a quantidade antiga do produto
        UPDATE Produtos
        SET Quantidade = Quantidade + OLD.Quantidade
        WHERE ID = OLD.Produto_ID;

        -- Decrementa a nova quantidade do produto
        UPDATE Produtos
        SET Quantidade = Quantidade - NEW.Quantidade
        WHERE ID = NEW.Produto_ID;
    END
END
^
SET TERM ; ^

